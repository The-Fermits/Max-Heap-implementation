
#include <bits/stdc++.h>
#define ll long long
#define int long long
#define pb push_back
#define popb pop_back
#define INT_MAX 1e9+15
#define INT_MIN -(1e9+15)



using namespace std;
using vpii = vector<pair<int, int>>;
using pii = pair<int, int>;
using vi = vector<int>;
using vvi = vector<vector<int>>;
#define ff first
#define ss second
#define endl '\n'
#define all(x) x.begin(), x.end()
#define sz(x) (int)(x).size()
const int inf = 9e18;
const int mod = 1e9 + 7;
const int NUM = 1000030;
const int NN = 10000000;
//-----------------------------------------------------------------------------------------------
/*---------------------C O D E -------------------------------------------------------------------------------
------------------------H E R E ---------------------------------------------------------------------------*/

vi tree;
int n ;
vi a ; 

void build(int node , int start , int end ) {
if(start==end) {
tree[node] = a[start] ;
}
int mid = (start+end)/ 2 ;
build(2*node, start , mid) ; 
build(2*node + 1 , mid + 1 , end) ;
tree[node]  = tree[2*node] + tree[2*node+1];
}

void update (int node , int start , int end , int i, int x) {
if(start==end) {
    a[start] = x ;
tree[node] = x ;
}
int mid = (start+end) / 2; 
if(i<=mid) update(2*node, start , mid , i, x) ; 
else update(2*node + 1 , mid +1 , end, i, x) ;
tree[node] = tree[2*node] + tree[2*node+1] ;
}

int query (int node, int start , int end , int l , int r) {
if(start>r || end < l) return 0 ; 
if(start>=l && end <=r ) return tree[node] ;
int mid = (start+end) / 2 ; 
return query(2*node,start,mid,l,r)+ query(2*node+1,mid+1,end, l, r) ;
}

void solve()
{
   cin >> n ;  

   tree.clear();
   tree.resize(4*n) ;

   a.clear() ; 
   a.resize(n+1) ; 


   for (int i=0; i<n; i++){
    cin >> a[i] ;
   }

   build(1,0,n-1);


   vi ans ;
   for (int i=0; i<n; i++){
    int ind , x ; 
    cin >> ind >> x; 
    update(1,0,n-1,ind,x);
    
    int l , r ; 
    cin >> l >> r ; 
    int ans = query(1,0,n-1,l,r) ;

   }
    
    
}
/*--------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------*/
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t = 1;
    cin >> t;
    while (t--)
        solve();
        
    return 0;
}
